// Code generated by MockGen. DO NOT EDIT.
// Source: instance.go
//
// Generated by this command:
//
//	mockgen -source=instance.go -destination=implementations/mock/instance.go
//

// Package mock_access is a generated GoMock package.
package mock_access

import (
	reflect "reflect"

	uuid "github.com/google/uuid"
	gomock "go.uber.org/mock/gomock"
)

// MockIInstance is a mock of IInstance interface.
type MockIInstance struct {
	ctrl     *gomock.Controller
	recorder *MockIInstanceMockRecorder
	isgomock struct{}
}

// MockIInstanceMockRecorder is the mock recorder for MockIInstance.
type MockIInstanceMockRecorder struct {
	mock *MockIInstance
}

// NewMockIInstance creates a new mock instance.
func NewMockIInstance(ctrl *gomock.Controller) *MockIInstance {
	mock := &MockIInstance{ctrl: ctrl}
	mock.recorder = &MockIInstanceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIInstance) EXPECT() *MockIInstanceMockRecorder {
	return m.recorder
}

// Access mocks base method.
func (m *MockIInstance) Access(userId, instanceId uuid.UUID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Access", userId, instanceId)
	ret0, _ := ret[0].(error)
	return ret0
}

// Access indicates an expected call of Access.
func (mr *MockIInstanceMockRecorder) Access(userId, instanceId any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Access", reflect.TypeOf((*MockIInstance)(nil).Access), userId, instanceId)
}
