stages:
    - build
    - test

# Unit tests

build-unit-tests:
    stage: build
    before_script:
        - docker compose -f docker/docker-compose.yml --env-file ${env} down --remove-orphans
    script:
        - docker compose -f docker/docker-compose.yml --env-file ${env} build backend_unit_tests test_db

unit-tests:
    stage: test
    before_script:
        - docker compose -f docker/docker-compose.yml --env-file ${env} down --remove-orphans
    script:
        - docker compose -f docker/docker-compose.yml --env-file ${env} run backend_unit_tests
    after_script:
        - docker compose -f docker/docker-compose.yml --env-file ${env} down --remove-orphans
    artifacts:
      paths:
        - backend/allure-report/allure-results/
      expire_in: 1 hour

# Integration tests

build-integration-tests:
    stage: build
    before_script:
        - docker compose -f docker/docker-compose.yml --env-file ${env} down --remove-orphans
    script:
        - docker compose -f docker/docker-compose.yml --env-file ${env} build backend_integration_tests test_db

integration-tests:
    stage: test
    before_script:
        - docker compose -f docker/docker-compose.yml --env-file ${env} down --remove-orphans
    script:
        - docker compose -f docker/docker-compose.yml --env-file ${env} run backend_integration_tests
    after_script:
        - docker compose -f docker/docker-compose.yml --env-file ${env} down --remove-orphans
    artifacts:
      paths:
        - backend/allure-report/allure-results/
      expire_in: 1 hour

# E2E tests

build-e2e-tests:
    stage: build
    before_script:
        - docker compose -f docker/docker-compose.yml --env-file ${env} down --remove-orphans
    script:
        - docker compose -f docker/docker-compose.yml --env-file ${env} build backend_e2e_tests test_db

e2e-tests:
    stage: test
    before_script:
        - docker compose -f docker/docker-compose.yml --env-file ${env} down --remove-orphans
    script:
        - docker compose -f docker/docker-compose.yml --env-file ${env} run backend_e2e_tests
    after_script:
        - docker compose -f docker/docker-compose.yml --env-file ${env} down --remove-orphans
    artifacts:
      paths:
        - backend/allure-report/allure-results/
      expire_in: 1 hour

# BDD E2E tests

build-bdd-e2e-tests:
    stage: build
    before_script:
        - curl https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg \
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list \
          sudo apt update && sudo apt install vault
        - export VAULT_TOKEN="$(vault write -field=token auth/jwt/login role=runner jwt=$CI_JOB_JWT)"
        - vault kv get -field ca test/email/crts > ./backend/crts/mailserver.crt
        - docker compose -f docker/docker-compose.yml --env-file ${env} down --remove-orphans
    script:
        - docker compose -f docker/docker-compose.yml --env-file ${env} build backend_bdd_e2e_tests test_db
    after_script:
        - rm -f ./backend/crts/mailserver.crt

bdd-e2e-tests:
    stage: test
    before_script:
        - docker compose -f docker/docker-compose.yml --env-file ${env} down --remove-orphans
    script:
        - export VAULT_TOKEN="$(vault write -field=token auth/jwt/login role=runner jwt=$CI_JOB_JWT)" \
          && export $(./scripts/get-email-credentials.sh | xargs) \
          && docker compose -f docker/docker-compose.yml --env-file ${env} run backend_bdd_e2e_tests
    after_script:
        - docker compose -f docker/docker-compose.yml --env-file ${env} down --remove-orphans

