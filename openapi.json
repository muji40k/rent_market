{
  "openapi": "3.0.0",
  "info": {
    "title": "Rent service API",
    "description": " Целью работы является разработка веб сайта для ресурса по аренде товаров. Приложение предоставляет возможность брать / сдавать проверенные предметы в аренду по подписочной модели (дни / недели / месяцы). ",
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "/api/v1"
    },
    {
      "url": "http://localhost/api/v1"
    },
    {
      "url": "http://localhost:12345"
    }
  ],
  "tags": [
    {
      "name": "Sessions",
      "description": "Authentication and sessions"
    },
    {
      "name": "Users",
      "description": "Query user information"
    },
    {
      "name": "Profiles",
      "description": "Query user profile information"
    },
    {
      "name": "Roles",
      "description": "Query user role information"
    },
    {
      "name": "Rents",
      "description": "Query rents"
    },
    {
      "name": "Provisions",
      "description": "Query provisions"
    },
    {
      "name": "Deliveries",
      "description": "Query deliveries"
    },
    {
      "name": "Storage",
      "description": "Query stored instances"
    },
    {
      "name": "Payment",
      "description": "Query payments"
    },
    {
      "name": "Periods",
      "description": "Query rent periods"
    },
    {
      "name": "Categories",
      "description": "Query categories"
    },
    {
      "name": "Products",
      "description": "Query products"
    },
    {
      "name": "Instances",
      "description": "Query provided instances"
    },
    {
      "name": "Pick up points",
      "description": "Query pick up points"
    },
    {
      "name": "Photos",
      "description": "Query photos"
    }
  ],
  "paths": {
    "/administrators/self": {
      "get": {
        "summary": "Check if user is administrator",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "tags": [
          "Roles"
        ],
        "responses": {
          "200": {
            "description": "User is administrator"
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get list of categories",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/categories/{id}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get full category path by id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Category identifier",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/deliveries": {
      "get": {
        "tags": [
          "Deliveries"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get information about active deliveries",
        "parameters": [
          {
            "in": "query",
            "name": "pickUpPointId",
            "description": "Pick up point identifier",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "query",
            "name": "instanceId",
            "description": "Instance identifier",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/size"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Delivery"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      },
      "post": {
        "tags": [
          "Deliveries"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Create delivery",
        "requestBody": {
          "description": "Delivery form",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "instance": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "from": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "to": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Delivery"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "409": {
            "description": " Instance isn't stored in 'from' pick up point or is already being transported "
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/deliveries/{id}": {
      "put": {
        "tags": [
          "Deliveries"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Change delivery state",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Delivery identifer",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "Action to be taken on the delivery",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": [
                      "send",
                      "accept"
                    ]
                  },
                  "description": {
                    "type": "string"
                  },
                  "state_photos": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "verification_code": {
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "description": " Taking action on request conflicts with internal state "
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/delivery-companies": {
      "get": {
        "tags": [
          "Deliveries"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get list of delivery companies",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/size"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryCompany"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/delivery-companies/{id}": {
      "get": {
        "tags": [
          "Deliveries"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get delivery company by id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Company identifier",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryCompany"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/instances": {
      "get": {
        "tags": [
          "Instances"
        ],
        "summary": "Get list of instances for the product",
        "parameters": [
          {
            "in": "query",
            "name": "productId",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "enum": [
                "ratingAsc",
                "ratingDesc",
                "dateAsc",
                "dateDesc",
                "priceAsc",
                "priceDesc",
                "usageAsc",
                "usageDesc"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/size"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Instance"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/instances/{id}": {
      "get": {
        "tags": [
          "Instances"
        ],
        "summary": "Get information about instance with id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance identifier",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Instance"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      },
      "put": {
        "tags": [
          "Instances"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Update information about instance with id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance identifier",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "Update form",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "product": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "condition": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/instances/{id}/pay-plans": {
      "get": {
        "tags": [
          "Instances"
        ],
        "summary": "Get list of instance pay-plans",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance identifier",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PayPlan"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      },
      "put": {
        "tags": [
          "Instances"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Update information about instance pay-plans",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance identifier",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "List of new pay plans",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "period": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "price": {
                      "$ref": "#/components/schemas/Currency"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "description": "Can't change pay plans during rent"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/instances/{id}/photos": {
      "get": {
        "tags": [
          "Instances"
        ],
        "summary": "Get list of instance photos",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance identifier",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      },
      "post": {
        "tags": [
          "Instances"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Add photo of instance",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance identifier",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "List of temp photos to be added",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/instances/{id}/reviews": {
      "get": {
        "tags": [
          "Instances"
        ],
        "summary": "Get list of reviews",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance identifier",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "enum": [
                "dateAsc",
                "dateDesc",
                "ratingAsc",
                "ratingDesc"
              ]
            }
          },
          {
            "in": "query",
            "name": "filterRating",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 0,
                "maximum": 5
              }
            }
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/size"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Review"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      },
      "post": {
        "tags": [
          "Instances"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Post review for the instance",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance identifier",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "Create form",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string"
                  },
                  "rating": {
                    "$ref": "#/components/schemas/Rating"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/pay-methods": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Get list of availble pay methods",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PayMethod"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/payments": {
      "get": {
        "tags": [
          "Payment"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get list of payments",
        "parameters": [
          {
            "in": "query",
            "name": "instanceId",
            "description": "Instance identifier",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "query",
            "name": "rentId",
            "description": "Rent identifier",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Payment"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/periods": {
      "get": {
        "tags": [
          "Periods"
        ],
        "summary": "Get list of periods",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Period"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/photos/temp": {
      "post": {
        "summary": "Create temp photo",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "tags": [
          "Photos"
        ],
        "requestBody": {
          "description": "Create form",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "mime": {
                    "type": "string"
                  },
                  "placeholder": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created (Temp photo identifier)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "415": {
            "description": "Unsupported mime type"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/photos/temp/{id}": {
      "post": {
        "tags": [
          "Photos"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Upload temp photo to the server",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Photo identifier",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "Photo itself",
          "content": {
            "image/png": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Uploaded"
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "415": {
            "description": "Mime doesn't match"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/photos/{id}": {
      "get": {
        "tags": [
          "Photos"
        ],
        "summary": "Get photo meta data with identifier",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Photo identifier",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Photo"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/pick-up-points": {
      "get": {
        "tags": [
          "Pick up points"
        ],
        "summary": "Get list of pick up points",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/size"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PickUpPoint"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/pick-up-points/{id}": {
      "get": {
        "tags": [
          "Pick up points"
        ],
        "summary": "Get information about pick up point with id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Pick up point identifier",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PickUpPoint"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/pick-up-points/{id}/photos": {
      "get": {
        "tags": [
          "Pick up points"
        ],
        "summary": "Get list of pick up point photos",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Pick up poin identifier",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/pick-up-points/{id}/working-hours": {
      "get": {
        "tags": [
          "Pick up points"
        ],
        "summary": "Get list of pick up point working hours",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Pick up poin identifier",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkingHours"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get list of products",
        "parameters": [
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "enum": [
                "offersAsc",
                "offersDesc"
              ]
            }
          },
          {
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "string"
                },
                "category": {
                  "type": "string",
                  "format": "uuid"
                },
                "characteristics": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "values": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "range": {
                        "type": "object",
                        "properties": {
                          "min": {
                            "type": "number"
                          },
                          "max": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/size"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get information about product with id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Product identifier",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/products/{id}/characteristics": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get list of product characteristics",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Product identifier",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCharacteristic"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/products/{id}/photos": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get list of product photos",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Product identifier",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/profiles/self": {
      "patch": {
        "tags": [
          "Profiles"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Update part of profile",
        "parameters": [
          {
            "in": "query",
            "name": "category",
            "description": "Desired category to update",
            "schema": {
              "$ref": "#/components/schemas/ProfileCategoriesList"
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "Category to be updated",
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ProfileGeneral"
                  },
                  {
                    "$ref": "#/components/schemas/ProfileFavorite"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "delete": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid"
                        }
                      },
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "move": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "register": {
                              "type": "object",
                              "properties": {
                                "pay_method": {
                                  "type": "string",
                                  "format": "uuid"
                                },
                                "payer_id": {
                                  "type": "string",
                                  "format": "password"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Category was updated"
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/profiles/{id}": {
      "get": {
        "tags": [
          "Profiles"
        ],
        "security": [
          {},
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get user profile",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "User identifier, of 'self'",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string",
                  "enum": [
                    "self"
                  ]
                }
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/provision-requests": {
      "get": {
        "tags": [
          "Provisions"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get list of provision requests",
        "parameters": [
          {
            "in": "query",
            "name": "userId",
            "description": "Provider's user identifier",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "query",
            "name": "instanceId",
            "description": "Instance identifier",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "in": "query",
            "name": "pickUpPointId",
            "description": "Assigned pick up point identifier",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/size"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProvisionRequest"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      },
      "post": {
        "tags": [
          "Provisions"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Create provision request",
        "requestBody": {
          "description": "Creation form",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "product": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "pick_up_point": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "condition": {
                    "type": "string"
                  },
                  "pay_plans": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "period": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "price": {
                          "$ref": "#/components/schemas/Currency"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Request created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProvisionRequest"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/provision-requests/{id}": {
      "put": {
        "tags": [
          "Provisions"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Change provision request status",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Provision request identifer",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "Action to be taken on the request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": [
                      "satisfy",
                      "reject"
                    ]
                  },
                  "overrides": {
                    "type": "object",
                    "properties": {
                      "product": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "condition": {
                        "type": "string"
                      },
                      "pay_plans": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "period": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "price": {
                              "$ref": "#/components/schemas/Currency"
                            }
                          }
                        }
                      }
                    }
                  },
                  "state_photos": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "verification_code": {
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "description": " Taking action on request conflicts with internal state "
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/provision-returns": {
      "get": {
        "tags": [
          "Provisions"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get list of provision requests",
        "parameters": [
          {
            "in": "query",
            "name": "userId",
            "description": "Provider's user identifier",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "query",
            "name": "instanceId",
            "description": "Instance identifier",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "in": "query",
            "name": "pickUpPointId",
            "description": "Assigned pick up point identifier",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/size"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProvisionReturn"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      },
      "post": {
        "tags": [
          "Provisions"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Create provision request",
        "requestBody": {
          "description": "Return form",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "provision": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "pick_up_point": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Request created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProvisionReturn"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "description": " Taking action on request conflicts with internal state "
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/provision-returns/{id}": {
      "put": {
        "tags": [
          "Provisions"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Change provision request status",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Provision return identifer",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "Action to be taken on the request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": [
                      "satisfy"
                    ]
                  },
                  "state_photos": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "verification_code": {
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "description": " Taking action on request conflicts with internal state "
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      },
      "delete": {
        "tags": [
          "Provisions"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Cancel provision request status",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Provision return identifer",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "description": " Taking action on request conflicts with internal state "
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/provisions": {
      "get": {
        "tags": [
          "Provisions"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get list of provisions",
        "parameters": [
          {
            "in": "query",
            "name": "userId",
            "description": "Renter's user identifier",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "query",
            "name": "instanceId",
            "description": "Instance identifier",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Provision"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/rent-requests": {
      "get": {
        "tags": [
          "Rents"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get list of rent requests",
        "parameters": [
          {
            "in": "query",
            "name": "userId",
            "description": "User identifier",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "query",
            "name": "instanceId",
            "description": "Instance identifier",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "in": "query",
            "name": "pickUpPointId",
            "description": "Assigned pick up point identifier",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/size"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RentRequest"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      },
      "post": {
        "tags": [
          "Rents"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Create rent request",
        "requestBody": {
          "description": "Creation form",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "instance": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "pick_up_point": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "payment_period": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Request created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RentRequest"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "description": "Instance already rented"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/rent-requests/{id}": {
      "put": {
        "tags": [
          "Rents"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Change rent request status",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Rent request identifer",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "Action to be taken on the request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": [
                      "satisfy",
                      "reject"
                    ]
                  },
                  "state_photos": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "verification_code": {
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "description": " Taking action on request conflicts with internal state "
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/rent-returns": {
      "get": {
        "tags": [
          "Rents"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get list of rent returns",
        "parameters": [
          {
            "in": "query",
            "name": "userId",
            "description": "User identifier",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "query",
            "name": "instanceId",
            "description": "Instance identifier",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "in": "query",
            "name": "pickUpPointId",
            "description": "Assigned pick up point identifier",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/size"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RentReturn"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      },
      "post": {
        "tags": [
          "Rents"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Create rent return",
        "requestBody": {
          "description": "Return form",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rent": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "pick_up_point": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "rent_end_date": {
                    "type": "string",
                    "format": "date"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Request created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RentReturn"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "description": " Taking action on request conflicts with internal state "
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/rent-returns/{id}": {
      "put": {
        "tags": [
          "Rents"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Change rent returns status",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Rent return identifer",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "Action to be taken on the request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": [
                      "satisfy"
                    ]
                  },
                  "description": {
                    "type": "string"
                  },
                  "state_photos": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "verification_code": {
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "description": " Taking action on request conflicts with internal state "
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      },
      "delete": {
        "tags": [
          "Rents"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Cancel rent request status",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Rent return identifer",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "description": " Can't cancel request, since renter is waiting for return "
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/renters/self": {
      "get": {
        "summary": "Check if user is a renter",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "tags": [
          "Roles"
        ],
        "responses": {
          "200": {
            "description": "User is renter"
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      },
      "post": {
        "summary": "Register user as renter",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "tags": [
          "Roles"
        ],
        "responses": {
          "200": {
            "description": "User is already a renter"
          },
          "201": {
            "description": "User was successfully registered as renter"
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/rents": {
      "get": {
        "tags": [
          "Rents"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get list of rents for the user / instance",
        "parameters": [
          {
            "in": "query",
            "name": "userId",
            "description": "User identifier",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "query",
            "name": "instanceId",
            "description": "Instance identifier",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rent"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/sessions": {
      "post": {
        "summary": "Login user",
        "tags": [
          "Sessions"
        ],
        "requestBody": {
          "description": "Credential data for the user",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    },
                    "renew_token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "description": "Wrong authentication data"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      },
      "put": {
        "summary": "Renew session",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "tags": [
          "Sessions"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-API-RENEW",
            "description": "Renew token",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful renew",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    },
                    "renew_token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      },
      "delete": {
        "summary": "Logout user",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "tags": [
          "Sessions"
        ],
        "responses": {
          "200": {
            "description": "Successful logout"
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/stored-instances": {
      "get": {
        "tags": [
          "Storage"
        ],
        "security": [
          {},
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get list of stored instances",
        "parameters": [
          {
            "in": "query",
            "name": "pickUpPointId",
            "description": "Pick up poin identifier",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "query",
            "name": "instanceId",
            "description": "Instance identifier",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/size"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoredInstance"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/storekeepers/self": {
      "get": {
        "summary": "Check if user is a storekeeper and return pick up point id",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "tags": [
          "Roles"
        ],
        "responses": {
          "200": {
            "description": "User is a storekeeper",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pick_up_point": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Register new user",
        "requestBody": {
          "description": "User registration data",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User was registered"
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "description": "User with such email already exists"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    },
    "/users/self": {
      "get": {
        "tags": [
          "Users"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get information about authenticated user",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserData"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Update information about authenticated user",
        "requestBody": {
          "description": "User data to be updated",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string",
                        "format": "email"
                      }
                    }
                  },
                  "password": {
                    "type": "object",
                    "properties": {
                      "old": {
                        "type": "string",
                        "format": "password"
                      },
                      "new": {
                        "type": "string",
                        "format": "password"
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User data was updated"
          },
          "400": {
            "$ref": "#/components/responses/WrongRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "500": {
            "$ref": "#/components/responses/Internal"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "parent": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Rating": {
        "type": "number",
        "format": "double",
        "minimum": 0,
        "maximum": 5
      },
      "PayMethod": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "PayPlan": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "period": {
            "type": "string",
            "format": "uuid"
          },
          "price": {
            "$ref": "#/components/schemas/Currency"
          }
        }
      },
      "Payment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "rent": {
            "type": "string",
            "format": "uuid"
          },
          "pay_method": {
            "type": "string",
            "format": "uuid"
          },
          "period_start": {
            "type": "string",
            "format": "date"
          },
          "period_end": {
            "type": "string",
            "format": "date"
          },
          "price": {
            "$ref": "#/components/schemas/Currency"
          },
          "status": {
            "type": "string",
            "enum": [
              "created",
              "success",
              "refused",
              "error"
            ]
          },
          "create_date": {
            "type": "string",
            "format": "date"
          },
          "payment_date": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "house": {
            "type": "string"
          },
          "flat": {
            "type": "string"
          }
        }
      },
      "Delivery": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "company": {
            "type": "string",
            "format": "uuid"
          },
          "instance": {
            "type": "string",
            "format": "uuid"
          },
          "from": {
            "type": "string",
            "format": "uuid"
          },
          "to": {
            "type": "string",
            "format": "uuid"
          },
          "begin": {
            "type": "object",
            "properties": {
              "scheduled": {
                "type": "string",
                "format": "date"
              },
              "actual": {
                "type": "string",
                "format": "date"
              }
            }
          },
          "end": {
            "type": "object",
            "properties": {
              "scheduled": {
                "type": "string",
                "format": "date"
              },
              "actual": {
                "type": "string",
                "format": "date"
              }
            }
          },
          "verification_code": {
            "type": "string",
            "format": "passowrd"
          },
          "create_date": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "DeliveryCompany": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "site": {
            "type": "string",
            "format": "uri"
          },
          "phone_number": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "Rent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "instance": {
            "type": "string",
            "format": "uuid"
          },
          "user": {
            "type": "string",
            "format": "uuid"
          },
          "start_date": {
            "type": "string",
            "format": "date"
          },
          "end_date": {
            "type": "string",
            "format": "date"
          },
          "payment_period": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "RentRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "instance": {
            "type": "string",
            "format": "uuid"
          },
          "user": {
            "type": "string",
            "format": "uuid"
          },
          "pick_up_point": {
            "type": "string",
            "format": "uuid"
          },
          "payment_period": {
            "type": "string",
            "format": "uuid"
          },
          "verification_code": {
            "type": "string",
            "format": "password"
          },
          "create_date": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "RentReturn": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "instance": {
            "type": "string",
            "format": "uuid"
          },
          "user": {
            "type": "string",
            "format": "uuid"
          },
          "pick_up_point": {
            "type": "string",
            "format": "uuid"
          },
          "rent_end_date": {
            "type": "string",
            "format": "date"
          },
          "verification_code": {
            "type": "string",
            "format": "password"
          },
          "create_date": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "Period": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "duration": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "Review": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "instance": {
            "type": "string",
            "format": "uuid"
          },
          "user": {
            "type": "string",
            "format": "uuid"
          },
          "content": {
            "type": "string"
          },
          "rating": {
            "$ref": "#/components/schemas/Rating"
          },
          "date": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "Photo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "mime": {
            "type": "string"
          },
          "placeholder": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "href": {
            "type": "string",
            "format": "uri"
          },
          "date": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "PickUpPoint": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "capacity": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Instance": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "product": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "condition": {
            "type": "string"
          }
        }
      },
      "WorkingHours": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "day": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6
            ]
          },
          "start_hour": {
            "type": "string",
            "pattern": "\\d{2}:\\d{2}",
            "example": "08:00"
          },
          "end_hour": {
            "type": "string",
            "pattern": "\\d{2}:\\d{2}",
            "example": "20:00"
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "ProductCharacteristic": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "Profile": {
        "type": "object",
        "properties": {
          "general": {
            "$ref": "#/components/schemas/ProfileGeneral"
          },
          "favorite": {
            "$ref": "#/components/schemas/ProfileFavorite"
          },
          "pay_methods": {
            "$ref": "#/components/schemas/ProfilePayMethods"
          }
        }
      },
      "ProfileCategoriesList": {
        "type": "string",
        "enum": [
          "general",
          "favorite",
          "pay-methods"
        ]
      },
      "ProfileCategory": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ProfileGeneral"
          },
          {
            "$ref": "#/components/schemas/ProfileFavorite"
          },
          {
            "$ref": "#/components/schemas/ProfilePayMethods"
          }
        ]
      },
      "ProfileFavorite": {
        "type": "object",
        "properties": {
          "pick_up_point": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ProfileGeneral": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "surname": {
            "type": "string"
          },
          "patronymic": {
            "type": "string"
          },
          "birth_date": {
            "type": "string",
            "format": "date"
          },
          "photo": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ProfilePayMethods": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "pay_method": {
              "type": "string",
              "format": "uuid"
            },
            "name": {
              "type": "string"
            }
          }
        }
      },
      "Provision": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "instance": {
            "type": "string",
            "format": "uuid"
          },
          "user": {
            "type": "string",
            "format": "uuid"
          },
          "start_date": {
            "type": "string",
            "format": "date"
          },
          "end_date": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "ProvisionRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "product": {
            "type": "string",
            "format": "uuid"
          },
          "user": {
            "type": "string",
            "format": "uuid"
          },
          "pick_up_point": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "condition": {
            "type": "string"
          },
          "pay_plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PayPlan"
            }
          },
          "verification_code": {
            "type": "string",
            "format": "password"
          },
          "create_date": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "ProvisionReturn": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "instance": {
            "type": "string",
            "format": "uuid"
          },
          "user": {
            "type": "string",
            "format": "uuid"
          },
          "pick_up_point": {
            "type": "string",
            "format": "uuid"
          },
          "verification_code": {
            "type": "string",
            "format": "password"
          },
          "create_date": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "UserData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          }
        }
      },
      "StoredInstance": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "pick_up_point": {
            "type": "string",
            "format": "uuid"
          },
          "instance": {
            "type": "string",
            "format": "uuid"
          },
          "in": {
            "type": "string",
            "format": "date"
          },
          "out": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "Currency": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string"
          },
          "value": {
            "type": "number",
            "format": "double",
            "minimum": 0
          }
        }
      }
    },
    "parameters": {
      "offset": {
        "in": "query",
        "name": "offset",
        "description": "Number of items to skip before returning the results",
        "schema": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "default": 0
        }
      },
      "size": {
        "in": "query",
        "name": "size",
        "description": "Maximum number of items to return",
        "schema": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "default": 20
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-KEY"
      }
    },
    "responses": {
      "WrongRequest": {
        "description": "Wrong request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Internal": {
        "description": "Internal error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Unauthenticated": {
        "description": "Token is expired or unknown"
      },
      "Unauthorized": {
        "description": "User is unauthorized for this operation"
      },
      "NotFound": {
        "description": "Resource wasn't found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "what": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}