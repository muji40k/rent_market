
upstream app_get_backend_instances {
    server backend:80     weight=2;
    server backend_ro1:80 weight=1;
    server backend_ro2:80 weight=1;
}

upstream app_privileged_backend_instances {
    server backend:80;
}

map $request_method $backend_target {
    GET     app_get_backend_instances;
    default app_privileged_backend_instances;
}

server {
    listen 80;

    location /api/v1/ {
        rewrite /api/v1/(.*) /$1 break;
        proxy_pass http://$backend_target;
        proxy_set_header Host $host;
    }

    location = /documentation {
        return 301 docs/readme.md;
    }

    location / {
        add_header 'Access-Control-Allow-Origin' '*';

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        root /static/;
    }

    location = /_render/md {
        internal;
        allow all;
        add_header 'Vary' 'Accept';

        default_type text/html;
        alias /render/md/md-renderer.html;
    }

    location ~* /(?<path>(.*\.md)) {
        error_page 418 = /_render/md;
        add_header 'Vary' 'Accept';

        if ($http_accept !~* "text/markdown") {
            return 418;
        }

        proxy_set_header Host $host;

        if (!-f /static/$path) {
            rewrite /mirror1/(.*) /$1 break;
            proxy_pass http://mirror_nginx;
        }

        alias /static/$path;
    }

    location /mirror1 {
        proxy_pass http://mirror_nginx/;
        proxy_set_header Host $host;
    }

    location /test {
        return 301 /;
    }

    location /admin {
        proxy_set_header X-Script-Name /admin;
        proxy_set_header Host $host;
        proxy_pass http://pgadmin/;
        proxy_redirect off;
    }

    location = /status {
        stub_status;
    }
}

